import tkinter as tk
from tkinter import ttk
import config
from config import PREVIOUS_THEME


GENRES = ['Erotic Thriller'
, 'Giallo'
, 'Slasher Horror'
, 'Horror'
, 'Mystery'
, 'Thriller'
, 'Parody'
, 'Slapstick'
, 'Comedy'
, 'Drama'
, 'Romance'
, 'Satire'
, 'Sketch Comedy'
, 'Action'
, 'Adventure'
, 'Crime'
, 'Family'
, 'Biography'
, 'Martial Arts'
, 'Fantasy'
, 'Psychological Drama'
, 'HandDrawn Animation'
, 'Quest'
, 'Animation'
, 'War'
, 'Music'
, 'Documentary'
, 'Police Procedural'
, 'Western'
, 'Classical Western'
, 'Musical'
, 'Romantic Comedy'
, 'Fairy Tale'
, 'Stop Motion Animation'
, 'History'
, 'SciFi'
, 'History Documentary'
, 'Globetrotting Adventure'
, 'Superhero'
, 'Psychological Thriller'
, 'Suspense Mystery'
, 'Zombie Horror'
, 'Anime'
, 'Holiday Romance'
, 'Holiday'
, 'nan'
, 'Dark Fantasy'
, 'Vampire Horror'
, 'Disaster'
, 'Tragedy'
, 'Dark Comedy'
, 'Adult Animation'
, 'Mecha'
, 'Action Epic'
, 'Adventure Epic'
, 'Fantasy Epic'
, 'SciFi Epic'
, 'Space SciFi'
, 'Drug Crime'
, 'Buddy Comedy'
, 'Computer Animation'
, 'Farce'
, 'HighConcept Comedy'
, 'Urban Adventure'
, 'Teen Horror'
, 'Conspiracy Thriller'
, 'Cyber Thriller'
, 'Found Footage Horror'
, 'Science  Technology Documentary'
, 'Sea Adventure'
, 'Swashbuckler'
, 'Workplace Drama'
, 'ComingofAge'
, 'Teen Drama'
, 'Nature Documentary'
, 'Football'
, 'Sports Documentary'
, 'Sport'
, 'Tragic Romance'
, 'Folk Horror'
, 'Car Action'
, 'Road Trip'
, 'Sword  Sorcery'
, 'Pop Musical'
, 'BHorror'
, 'Prison Drama'
, 'Spy'
, 'Kung Fu'
, 'OnePerson Army Action'
, 'Wuxia'
, 'Political Thriller'
, 'Caper'
, 'Supernatural Horror'
, 'Witch Horror'
, 'Contemporary Western'
, 'Steamy Romance'
, 'Psychological Horror'
, 'Cop Drama'
, 'FeelGood Romance'
, 'StandUp'
, 'Baseball'
, 'Medical Drama'
, 'Buddy Cop'
, 'Heist'
, 'Period Drama'
, 'Animal Adventure'
, 'Raunchy Comedy'
, 'War Epic'
, 'Docudrama'
, 'Basketball'
, 'True Crime'
, 'Screwball Comedy'
, 'Samurai'
, 'Quirky Comedy'
, 'Dark Romance'
, 'Monster Horror'
, 'Jungle Adventure'
, 'Body Swap Comedy'
, 'Showbiz Drama'
, 'Supernatural Fantasy'
, 'Teen Comedy'
, 'Artificial Intelligence'
, 'Dystopian SciFi'
, 'News'
, 'Teen Romance'
, 'Legal Drama'
, 'Legal Thriller'
, 'Teen Adventure'
, 'Music Documentary'
, 'Body Horror'
, 'Alien Invasion'
, 'Survival'
, 'Whodunnit'
, 'Boxing'
, 'Political Drama'
, 'Costume Drama'
, 'Concert'
, 'Financial Drama'
, 'Extreme Sport'
, 'Dinosaur Adventure'
, 'Time Travel'
, 'Food Documentary'
, 'Epic'
, 'Romantic Epic'
, 'Kaiju'
, 'Spaghetti Western'
, 'Werewolf Horror'
, 'Desert Adventure'
, 'Gangster'
, 'Mockumentary'
, 'Steampunk'
, 'Sword  Sandal'
, 'Bumbling Detective'
, 'Holiday Animation'
, 'Holiday Comedy'
, 'Holiday Family'
, 'Jukebox Musical'
, 'BAction'
, 'Cyberpunk'
, 'Military Documentary'
, 'Teen Fantasy'
, 'Historical Epic'
, 'Soccer'
, 'Mountain Adventure'
, 'Shjo'
, 'Seinen'
, 'Shnen'
, 'Faith  Spirituality Documentary'
, 'Travel Documentary'
, 'Serial Killer'
, 'Gun Fu'
, 'Stoner Comedy'
, 'Western Epic'
, 'Water Sport'
, 'Motorsport'
, 'Isekai'
, 'Crime Documentary'
, 'Cozy Mystery'
, 'Hardboiled Detective'
, 'Iyashikei'
, 'Political Documentary'
, 'Rock Musical'
, 'Sitcom'
, 'Splatter Horror'
, 'Classic Musical'
, 'Korean Drama'
, 'Slice of Life'
, 'Talk Show'
, 'Reality TV'
, 'Game Show'
, 'Josei'
, 'Soap Opera']

class QuizStartScreen(ttk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        self.theme_var = tk.StringVar(value=config.BOOTSTRAP_THEME)
        self.previous_theme = config.BOOTSTRAP_THEME

        # seleção de tema
        ttk.Label(self, text="Gêneros").pack(pady=(20, 5))
        theme_combobox = ttk.Combobox(self, values=GENRES, textvariable=self.theme_var, state="readonly")
        theme_combobox.pack()
        theme_combobox.bind("<<ComboboxSelected>>", self.previous_theme)

        ttk.Label(self, text="DashMovies", font=("Arial", 36)).pack(pady=40)
        ttk.Button(
            self,
            text="Iniciar Quiz",
            command=self._go_to_quiz
        ).pack(pady=10)
        ttk.Button(self, text="Voltar", command=lambda: controller.show_frame("InitialScreen")).pack(pady=10)

    def _go_to_quiz(self):
        quiz_screen = self.controller.frames["QuizScreen"]
        quiz_screen.start_quiz()  # inicializa o quiz (perguntas, timer, etc)
        self.controller.show_frame("QuizScreen")  # exibe a tela do quiz